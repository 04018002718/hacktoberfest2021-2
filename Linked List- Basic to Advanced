Node* insertNode(Node* head, int data, int index)
{
    //insertion of node at ith index
    int count= 0;
    Node* newnode= new Node(data);
    if(index== 0)
    {
        newnode-> next= head;
        head= newnode;
        return head;
    }
    Node* temp= head;
    while(count< index- 1 && temp!= NULL)
    {
        temp= temp->next;
        count++;
    }
    if(temp!= NULL)
    {
        newnode-> next= temp-> next;
        temp-> next= newnode;
    }
    return head;
}
Node* deleteNode(Node* head, int index)
{
    //deletion of node at ith index
    int count= 0;
    Node* temp= head;
    if(index== 0)
    {
        head= head-> next;
        delete temp;
        return head;
    }
    while(count< index-1 && temp!= NULL)
    {
        temp= temp->next;
        count++;
    }
    if(temp!= NULL && temp->next!= NULL)
    {
        Node* temp2= temp->next;
        temp->next= temp2->next;
        delete temp2;
    }
    return head;
}
Node* deleteNoderec(Node* head, int index)
{
    if(index==0)
    {
        Node* temp= head;
        head= head-> next;
        delete temp;
        return head;
    }
    else
    {
        Node* temp= head;
        while(temp!= NULL)
        {
            if(index== 1)
            {
                Node*temp2= temp->next;
                temp-> next= temp2-> next;
                delete temp2;
            }
            index--;
            temp= temp->next;
        }
    }
    return head;
}
int countlength(Node* head)
{
    // find the length of the linked list iteratively
    int count=0;
    Node* temp= head;
    while(temp!= NULL)
    {
        count++;
        temp= temp->next;
    }
    return count;
}
int countlengthrec(Node* head)
{
    //find the length of the linked list recursively
    if(head== NULL)
    {
        return 0;
    }
    else
    {
        return 1+ countlengthrec(head->next);
    }
}
void printlist(Node* head)
{
    Node* temp= head;
    while(temp!= NULL)
    {
        cout<<temp->data<<" ";
        temp= temp->next;
    }
    cout<<"\n";
}
Node* takeinput()
{
    int data;
    cout<<"Enter\n";
    cin>>data;
    Node* head = NULL;
    Node* tail = NULL;
    while(data!= -1)
    {
        Node* newnode= new Node(data);
        if(head== NULL)
        {
            head= newnode;  
            tail= newnode;
        }
        else
        {
            tail->next= newnode;
            tail= newnode;
            // or tail= tail->next;
        }
        cin>>data;
    }
    return head;
}
